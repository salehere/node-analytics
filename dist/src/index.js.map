{"version":3,"sources":["../../src/index.js"],"names":["getIpFn","get_ip","db","geoLookup","io","log","requestSchema","mongoose","Schema","_id","type","String","unique","index","host","date","Date","default","now","url","query","field","value","ref","referrer","method","time","Number","reaches","pauses","id","clicks","sessionSchema","user","name","last","ip","is_bot","Boolean","geo","city","state","country","continent","time_zone","system","os","version","browser","resolution","width","height","reqs","flash_data","Types","Mixed","Session","model","analytics","sessions","opts","db_host","db_port","db_name","ws_port","ws_server","s_io","geo_ip","mmdb","log_all","error_log","secure","secret","log_opts","pre","mongoose_params","useNewUrlParser","autoReconnect","keepAlive","keepAliveInitialDelay","socketTimeoutMS","connectTimeoutMS","poolSize","reconnectTries","reconnectInterval","mongoDB","cb","dbUrl","connection","dbConnect","setTimeout","chalk","cyan","connect","on","yellow","err","error","red","clearTimeout","once","green","geoDB","maxmind","open","socketInit","sio","listen","of","use","next","handshake","headers","cookie","cookies","getCookies","na_session","socketConnection","socket","session_start","blurred","blurring","req_id","na_req","session_id","findById","session","i","length","toString","req","socketResponse","bind","Update","$set","_socket","click","reach","pause","blur","focus","disconnect","request","$push","params","magenta","t","sessionT","session_time","SESSION_FIELDS","optsIn","k","async","parallelLimit","res","indexOf","waterfall","getSession","setCookies","sessionData","newRequest","logRequest","sessionSave","sessionFlash","node_analytics","lean","exec","na_user","userSession","newSession","continued","new_session","toObject","virtuals","timer","new_user","AES","encrypt","maxAge","httpOnly","getIp","getLocation","getSystem","clientIp","loc","get","names","en","subdivisions","iso_code","code","location","e","agent","useragent","parse","family","major","minor","patch","crypto","randomBytes","hostname","push","logStart","reqLog","ses","_log_start","process","hrtime","sc","statusCode","ms","nanoTime","replace","args","grey","start","conv","Math","round","identify","Identify","flash","Flash","save","session_save","endurance","val","upd","keys","_keys","findByIdAndUpdate","new","fields","upsert","doc","updIn","k2","reqKey","update","n","src","decrypt","CryptoJS","encrypted","enc","Utf8","options","find","sort","limit","results"],"mappings":"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","file":"index.js","sourcesContent":["/* eslint-disable\n  prefer-destructuring,no-use-before-define,\n  consistent-return,no-nested-ternary,no-param-reassign,\n  no-shadow,eqeqeq,no-underscore-dangle,no-plusplus,\n  no-mixed-operators,no-restricted-syntax,guard-for-in */\n\n/*\n * https://github.com/andrao/node-analytics\n */\n\nimport crypto from 'crypto';\nimport mongoose from 'mongoose';\nimport useragent from 'useragent';\nimport maxmind from 'maxmind';\nimport cookie from 'cookie';\nimport async from 'async';\nimport sio from 'socket.io';\nimport chalk from 'chalk';\nimport CryptoJS from 'crypto-js';\nimport onHeaders from 'on-headers';\nimport onFinished from 'on-finished';\nimport logger from 'andrao-logger';\nimport ipware from 'ipware';\n\n// installed\nconst getIpFn = ipware().get_ip;\n\n// globals\nlet db;\n\nlet geoLookup;\nlet io = false;\nlet log = logger('n-a');\n\n// -------------------------------------------------------------\n\nconst requestSchema = mongoose.Schema({\n  _id: { type: String, unique: true, index: true },\n  host: String,\n  date: { type: Date, default: Date.now },\n  url: { type: String, index: true },\n  query: [{ field: String, value: String }],\n  ref: { type: String, index: true },\n  referrer: String,\n  method: String,\n  time: Number,\n  reaches: [String],\n  pauses: [\n    {\n      _id: false,\n      id: String,\n      time: Number,\n    },\n  ],\n  clicks: [String],\n});\n\nconst sessionSchema = mongoose.Schema({\n  user: { type: String, index: true },\n  name: { type: String, index: true },\n  date: { type: Date, default: Date.now },\n  last: { type: Date, default: Date.now },\n  ip: String,\n  is_bot: { type: Boolean, default: true },\n  geo: {\n    _id: false,\n    city: { type: String, index: true },\n    state: { type: String, index: true },\n    country: { type: String, index: true },\n    continent: { type: String, index: true },\n    time_zone: { type: String, index: true },\n  },\n  system: {\n    os: {\n      _id: false,\n      name: String,\n      version: String,\n    },\n    browser: {\n      _id: false,\n      name: String,\n      version: String,\n    },\n  },\n  time: Number,\n  resolution: {\n    _id: false,\n    width: Number,\n    height: Number,\n  },\n  reqs: [requestSchema],\n  state: String,\n  flash_data: mongoose.Schema.Types.Mixed,\n});\nconst Session = mongoose.model('Session', sessionSchema);\n\nexport default analytics;\nexport { sessions };\n\nconst opts = {\n  db_host: '127.0.0.1',\n  db_port: 27017,\n  db_name: 'node_analytics_db',\n  ws_port: 8080,\n  ws_server: false,\n  s_io: false,\n  geo_ip: true,\n  mmdb: 'GeoLite2-City.mmdb',\n  log: true,\n  log_all: false,\n  error_log: true,\n  secure: true,\n  secret: 'changeMe',\n  log_opts: {\n    pre: 'n-a',\n  },\n  mongoose_params: {\n    useNewUrlParser: true,\n    autoReconnect: true,\n    keepAlive: true,\n    keepAliveInitialDelay: 120,\n    socketTimeoutMS: 30000,\n    connectTimeoutMS: 30000,\n    poolSize: 50,\n    reconnectTries: 500,\n    reconnectInterval: 3000,\n  },\n};\n\nlog('active: wait for MongoDB, GeoIP, & WebSocket');\n\nfunction mongoDB(cb) {\n  // Connect to MongoDB\n  const dbUrl = `mongodb://${opts.db_host}:${opts.db_port}/${opts.db_name}`;\n\n  db = mongoose.connection;\n\n  const dbConnect = setTimeout(() => {\n    log(chalk.cyan('mongoose.connect'));\n    mongoose.connect(\n      dbUrl,\n      opts.mongoose_params,\n    );\n  }, 500);\n\n  db.on('connecting', () => {\n    log(chalk.yellow('MongoDB connecting'));\n  });\n  db.on('error', (err) => {\n    log.error(chalk.red('MongoDB error'), err);\n  });\n  db.on('connected', () => {\n    log(chalk.yellow('MongoDB connected:'), 'Wait for open.');\n\n    if (dbConnect) {\n      clearTimeout(dbConnect);\n    }\n  });\n  db.once('open', () => {\n    log(chalk.green('MongoDB connection open'));\n    cb(null);\n  });\n  db.on('reconnected', () => {\n    log(chalk.green('MongoDB reconnected.'));\n  });\n  db.on('disconnected', () => {\n    log.error(chalk.red('MongoDB disconnected!'), 'Attempting reconnect.');\n  });\n}\n\nfunction geoDB(cb) {\n  // Check for mmdb\n  if (opts.geo_ip) {\n    maxmind.open(opts.mmdb, (err, mmdb) => {\n      if (err) {\n        log.error('GeoIP DB open error', opts.mmdb, err);\n        return cb(true);\n      }\n\n      geoLookup = mmdb;\n      log('GeoIP DB loaded successfully');\n      cb(null);\n    });\n  } else {\n    log('GeoIP disabled');\n    cb(null);\n  }\n}\n\nfunction socketInit(cb) {\n  io = opts.s_io ? opts.s_io : opts.ws_server ? sio.listen(opts.ws_server) : sio(opts.ws_port);\n\n  io.of('/node-analytics')\n    .use(({ handshake }, next) => {\n      if (handshake.headers.cookie) {\n        const cookies = getCookies(handshake.headers.cookie);\n        if (cookies && cookies.na_session) {\n          next();\n        }\n      } else {\n        log.error('Socket authentication error; no session cookie');\n      }\n    })\n    .on('connection', socketConnection);\n\n  log('Websocket server established');\n\n  cb(null);\n}\n\n// =====================\n\nfunction socketConnection(socket) {\n  const cookies = getCookies(socket.handshake.headers.cookie);\n\n  socket.session_start = Date.now();\n  socket.blurred = 0;\n  socket.blurring = Date.now();\n  socket.req_id = cookies.na_req;\n  socket.session_id = cookies.na_session;\n\n  // Get session\n  if (socket.session_id) {\n    Session.findById(\n      socket.session_id,\n      function (err, session) {\n        if (err) {\n          return log.error('Session find error :: id[socket]', this.session_id, err);\n        }\n        if (!session) {\n          return log.error('Session not found :: id[socket]', this.session_id);\n        }\n\n        const socket = this;\n\n        // set regional session and request\n        socket.session = session;\n        if (socket.req_id) {\n          for (let i = session.reqs.length - 1; i >= 0; i--) {\n            if (session.reqs[i]._id.toString() == socket.req_id) {\n              socket.req = session.reqs[i];\n              break;\n            }\n          }\n        }\n\n        // log and initiate socket sensitivity\n        if (!socket.req) {\n          log.error('socket connected; request not found');\n        } else if (opts.log_all) {\n          log.session(session, 'socket connected; request:', socket.req._id);\n        }\n\n        socketResponse(socket);\n      }.bind(socket),\n    );\n  }\n\n  // =============\n\n  function socketResponse(socket) {\n    // session updates from the client\n\n    // Trivial not-bot check: socket connects;\n    //   Could / should be improved to having done action on page\n\n    if (socket.session.is_bot) {\n      Update.session(socket.session, { $set: { is_bot: false } });\n    }\n\n    if (!socket.session.resolution) {\n      socket.on('resolution', _socket.resolution.bind(socket));\n    }\n\n    // request updates\n    socket.on('click', _socket.click.bind(socket));\n    socket.on('reach', _socket.reach.bind(socket));\n    socket.on('pause', _socket.pause.bind(socket));\n\n    // session timer\n    socket.on('blur', _socket.blur.bind(socket));\n    socket.on('focus', _socket.focus.bind(socket));\n\n    // Disconnection\n    socket.on('disconnect', _socket.disconnect.bind(socket));\n  }\n}\n\nconst _socket = {\n  click(id) {\n    if (this.req) {\n      Update.request(this, { $push: { clicks: id } });\n    }\n\n    if (opts.log) {\n      log.session(this.session, chalk.green('click'), '@', chalk.cyan(id));\n    }\n  },\n  reach(id) {\n    if (this.req) {\n      Update.request(this, { $push: { reaches: id } });\n    }\n\n    if (opts.log) {\n      log.session(this.session, chalk.yellow('reach'), '@', chalk.cyan(id));\n    }\n  },\n  pause(params) {\n    if (this.req) {\n      Update.request(this, { $push: { pauses: params } });\n    }\n\n    if (opts.log) {\n      log.session(\n        this.session,\n        chalk.magenta('pause'),\n        `for ${params.time}s @`,\n        chalk.cyan(params.id),\n      );\n    }\n  },\n\n  blur() {\n    this.blurring = Date.now();\n  },\n\n  focus() {\n    this.blurred += Date.now() - this.blurring;\n  },\n\n  resolution(params) {\n    Update.session(this.session, { $set: { resolution: params } });\n  },\n\n  disconnect() {\n    if (!this || !this.req) {\n      return;\n    }\n\n    // request time, sans blurred time\n    const t = (Date.now() - this.session_start - this.blurred) / 1000;\n\n    // total session time; begin with this request\n    let sessionT = t;\n    for (let i = 0; i < this.session.reqs.length; i++) {\n      sessionT += this.session.reqs[i].time;\n    }\n\n    // update request & session\n    this.req.time = t;\n    if (this.req) {\n      Update.request(this, { $set: { time: t } });\n    }\n\n    Update.session(this.session, { $set: { session_time: sessionT } });\n\n    if (opts.log) {\n      log.session(this.session, chalk.red(t));\n    }\n  },\n};\n\n// ===============\n\nconst SESSION_FIELDS = '_id user name date last flash_data';\n\nfunction analytics(optsIn) {\n  for (const k in optsIn) {\n    opts[k] = optsIn[k];\n  }\n\n  if (!opts.log_opts.pre) {\n    opts.log_opts.pre = 'n-a';\n  }\n\n  log = logger(opts.log_opts);\n\n  async.parallelLimit([mongoDB, socketInit, geoDB], 2, (err) => {\n    if (err) {\n      return log.error('start-up interrupted');\n    }\n\n    log(chalk.green('NODE ANALYTICS READY'));\n  });\n\n  // HTTP request:\n  return (req, res, next) => {\n    // Skip cases\n    if (req.url.indexOf('/socket.io/?EIO=') == 0) {\n      return next();\n    }\n    async.waterfall(\n      [\n        (cb) => {\n          getSession(req, res, cb);\n        },\n        setCookies,\n        sessionData,\n        newRequest,\n        logRequest,\n        sessionSave,\n        sessionFlash,\n      ],\n      (err, session) => {\n        if (err) {\n          log.error(err);\n          next();\n          return false;\n        }\n        req.node_analytics = session;\n        next();\n      },\n    );\n  };\n}\n\n// =====================\n\n// populate var session; returns boolean on whether newly formed\nfunction getSession(req, res, cb) {\n  const now = new Date();\n  const cookies = getCookies(req.headers.cookie);\n\n  // cookies.na_session  :: session._id\n  // cookies.na_user     :: session.user\n\n  // Establish session: new/old session? new/old user?\n  if (cookies.na_session) {\n    if (opts.log_all) {\n      log('Session cookie found:', cookies.na_session);\n    }\n\n    Session.findById(cookies.na_session, SESSION_FIELDS)\n      .lean()\n      .exec(function (err, session) {\n        if (err) {\n          log.error('getSession error', err);\n          return cb(err);\n        }\n\n        if (!session) {\n          log.error('Session not found :: id[cookie]:', this.cookies.na_session);\n\n          // send to check if user instead\n          if (cookies.na_user) {\n            userSession();\n          } else {\n            newSession();\n          }\n        } else {\n          Update.session(\n            session,\n            {\n              $set: {\n                last: Date.now(),\n              },\n            },\n            (err, session) => {\n              if (err) {\n                log.error('establish session / update error');\n                return cb(true);\n              }\n\n              session.continued = true;\n              cb(err, this.req, this.res, session);\n            },\n          );\n        }\n      }.bind({\n        cookies,\n        req,\n        res,\n      }));\n  } else if (cookies.na_user) {\n    userSession();\n  } else {\n    newSession();\n  }\n\n  // ====================\n\n  function userSession() {\n    // OLD USER, NEW SESSION\n\n    cb(\n      null,\n      req,\n      res,\n      new Session({\n        user: cookies.na_user,\n        new_session: true,\n      }).toObject({ virtuals: true }),\n    );\n\n    if (opts.log_all) {\n      log.timer('getSession 1', now);\n    }\n  }\n\n  function newSession() {\n    // NEW USER, NEW SESSION\n    // Initiate session to get _id\n    let session = new Session();\n    session.user = session._id.toString();\n    session.new_user = true;\n\n    session = session.toObject({ virtuals: true });\n\n    cb(null, req, res, session);\n\n    if (opts.log_all) {\n      log.timer('getSession 2', now);\n    }\n  }\n}\n\n// set cookies\nfunction setCookies(req, res, session, cb) {\n  const now = new Date();\n\n  // Set cookies\n  res.cookie('na_session', AES.encrypt(session._id.toString()), {\n    maxAge: 1000 * 60 * 15, // 15 mins\n    httpOnly: true,\n    secure: opts.secure,\n  });\n  res.cookie('na_user', AES.encrypt(session.user), {\n    maxAge: 1000 * 60 * 60 * 24 * 365, // 1 year\n    httpOnly: true,\n    secure: opts.secure,\n  });\n\n  cb(null, req, res, session);\n\n  if (opts.log_all) {\n    log.timer('setCookies', now);\n  }\n}\n\n// append session data\nfunction sessionData(req, res, session, cb) {\n  const now = new Date();\n\n  if (session.continued) {\n    return cb(null, req, res, session);\n  }\n\n  async.parallelLimit(\n    [getIp, getLocation, getSystem],\n    2,\n    function (err) {\n      cb(err, this.req, this.res, this.session);\n\n      if (opts.log_all) {\n        log.timer('sessionData', now);\n      }\n    }.bind({\n      req,\n      res,\n      session,\n    }),\n  );\n\n  // ======================\n\n  // .ip\n  function getIp(cb) {\n    session.ip = getIpFn(req).clientIp;\n    cb(null);\n  }\n\n  // .geo :: .city, .state, .country\n  function getLocation(cb) {\n    if (!geoLookup) {\n      return cb(null);\n    }\n\n    const loc = geoLookup.get(session.ip);\n\n    if (!session.geo) {\n      session.geo = {};\n    }\n\n    if (loc) {\n      try {\n        if (loc.city) {\n          session.geo.city = loc.city.names.en;\n        }\n        if (loc.subdivisions) {\n          session.geo.state = loc.subdivisions[0].iso_code;\n        }\n        if (loc.country) {\n          session.geo.country = loc.country.iso_code;\n        }\n        if (loc.continent) {\n          session.geo.continent = loc.continent.code;\n        }\n        if (loc.location) {\n          session.geo.time_zone = loc.location.time_zone;\n        }\n      } catch (e) {\n        log.error('geoIP error:', e);\n      }\n    }\n\n    cb(null);\n  }\n\n  // .system :: .os{, .broswer{ .name, .version\n  function getSystem(cb) {\n    const agent = useragent.parse(req.headers['user-agent']);\n    const os = agent.os;\n\n    if (!session.system) {\n      session.system = {};\n    }\n\n    if (!session.system.browser) {\n      session.system.browser = {};\n    }\n    if (!session.system.os) {\n      session.system.os = {};\n    }\n\n    session.system.browser.name = agent.family;\n    session.system.browser.version = `${agent.major}.${agent.minor}.${agent.patch}`;\n\n    session.system.os.name = os.family;\n    session.system.os.version = `${os.major}.${os.minor}.${os.patch}`;\n\n    cb(null);\n  }\n}\n\n// return new request document, create req cookie\nfunction newRequest(req, res, session, cb) {\n  const now = new Date();\n\n  const request = {\n    _id: `r${crypto.randomBytes(16).toString('hex')}${Date.now()}`,\n    host: req.hostname,\n    url: req.url,\n    method: req.method,\n    referrer: req.get('Referrer') || req.get('Referer'),\n  };\n\n  // populate request query\n  for (const field in req.query) {\n    if (field === 'ref') {\n      request.ref = req.query[field];\n    } else {\n      if (!request.query) {\n        request.query = [];\n      }\n\n      request.query.push({\n        field,\n        value: req.query[field],\n      });\n    }\n  }\n\n  // add request cookie for communication/association with socket\n  res.cookie('na_req', AES.encrypt(request._id), {\n    maxAge: 1000 * 60 * 15, // 15 mins\n    httpOnly: true,\n    secure: opts.secure,\n  });\n\n  // return request object: will be added at sessionSave();\n  cb(null, req, res, session, request);\n\n  if (opts.log_all) {\n    log.timer('newRequest', now);\n  }\n}\n\n// log request\nfunction logRequest(req, res, session, request, cb) {\n  const now = new Date();\n\n  if (opts.log) {\n    onHeaders(res, logStart.bind(res));\n    onFinished(\n      res,\n      reqLog.bind({\n        req: request,\n        ses: session,\n      }),\n    );\n  }\n\n  cb(null, session, request);\n\n  if (opts.log_all) {\n    log.timer('logRequest', now);\n  }\n\n  // / ==============\n\n  function logStart() {\n    this._log_start = process.hrtime();\n  }\n  function reqLog() {\n    const request = this.req;\n    const session = this.ses;\n\n    // Status colour\n    const sc = res.statusCode < 400 ? 'green' : 'red';\n\n    // Res time\n    const ms = nanoTime(res._log_start);\n\n    // Referrer\n    let ref = request.referrer;\n    if (ref) {\n      ref = ref.replace('http://', '');\n      ref = ref.replace('https://', '');\n    }\n\n    // Args\n    const args = [\n      session,\n      '|',\n      chalk.magenta(request.url),\n      '|',\n      request.method,\n      chalk[sc](res.statusCode),\n      `: ${ms} ms`,\n    ];\n\n    if (session && session.system) {\n      args.push('|');\n\n      if (session.system.browser) {\n        args.push(chalk.grey(session.system.browser.name));\n        args.push(chalk.grey(session.system.browser.version));\n      }\n      if (session.system.os) {\n        args.push(chalk.grey(session.system.os.name));\n        args.push(chalk.grey(session.system.os.version));\n      }\n    }\n\n    if (ref) {\n      args.push('|', chalk.grey(`from ${ref}`));\n    }\n\n    // Apply\n    log.session(...args);\n\n    // ===\n\n    function nanoTime(start) {\n      let t = conv(process.hrtime()) - conv(start); // ns\n      t = Math.round(t / 1000); // µs\n      return t / 1000; // ms [3 dec]\n\n      // ====\n\n      function conv(t) {\n        if (!t || typeof t[0] === 'undefined') {\n          return 0;\n        }\n\n        return t[0] * 1e9 + t[1];\n      }\n    }\n  }\n}\n\n// save / update session to DB & proceed to socket\nfunction sessionSave(session, request, cb) {\n  const now = new Date();\n\n  if (!session.continued) {\n    session.reqs = [request];\n\n    Update.session(session, { $set: session }, (err, session) => {\n      if (err) {\n        return cb('db session save error');\n      }\n\n      if (opts.log_all) {\n        log.session(session, 'session active [ new ]');\n      }\n\n      cb(null, session);\n\n      if (opts.log_all) {\n        log.timer('sessionSave 1', now);\n      }\n    });\n  } else {\n    // an old session: all that needs be updated is request\n    Update.session(session, { $push: { reqs: request } }, (err, session) => {\n      if (err) {\n        log.error('db session update error');\n        return cb(true);\n      }\n\n      if (opts.log_all) {\n        log.session(session, 'session active [ updated ]');\n      }\n\n      cb(null, session);\n\n      if (opts.log_all) {\n        log.timer('sessionSave 2', now);\n      }\n    });\n  }\n}\n\nfunction sessionFlash(session, cb) {\n  const now = new Date();\n\n  // SESSION OBJECT FUNCTIONS\n  session.identify = Identify.bind(session);\n  session.flash = Flash.bind(session);\n  session.save = Update.session_save.bind(session);\n\n  // Expire and clear flash data\n  for (const k in session.flash_data) {\n    if (\n      session.flash_data[k].endurance !== 'indefinite' &&\n      (!session.flash_data[k].endurance || !(session.flash_data[k].endurance - 1))\n    ) {\n      delete session.flash_data[k];\n    } else if (session.flash_data[k].endurance !== 'indefinite') {\n      session.flash_data[k].endurance--;\n    }\n  }\n\n  Update.session(\n    session,\n    {\n      $set: {\n        flash_data: session.flash_data,\n      },\n    },\n    function (err) {\n      if (err) {\n        log.error('sessionFlash update error', err);\n      }\n\n      cb(null, this);\n\n      if (opts.log_all) {\n        log.timer('sessionFlash', now);\n      }\n    }.bind(session),\n  );\n}\n\n// =====================\n\nfunction Identify(name) {\n  Update.session(this, { $set: { name } }, (err) => {\n    if (err) {\n      log.error('session.associate: name save error', err);\n    }\n  });\n}\n\nfunction Flash(field, value, endurance, cb) {\n  // Return saved field value\n  if (typeof value === 'undefined') {\n    if (!this.flash_data || !this.flash_data[field]) {\n      return null;\n    }\n\n    return this.flash_data[field].val;\n  }\n\n  // Save new field value for next session\n\n  // Endurance represents number of page loads that this variable will last for\n  //  (Helpful in redirect situations)\n  if (typeof endurance === 'function') {\n    cb = endurance;\n    endurance = 1;\n  } else if (!endurance) {\n    endurance = 1;\n  }\n\n  if (!this.flash_data) {\n    this.flash_data = {};\n  }\n\n  this.flash_data[field] = {\n    val: value,\n    endurance,\n  };\n  Update.session(this, { $set: { flash_data: this.flash_data } }, (err) => {\n    if (err) {\n      log.error('flash data save error', err);\n    }\n    if (cb) {\n      cb(err);\n    }\n  });\n}\n\n// =====================\n\nconst Update = {\n  session_save(cb) {\n    const session = this;\n    Update.session(\n      session,\n      {\n        $set: session,\n      },\n      cb,\n    );\n  },\n\n  session(session, upd, cb) {\n    const keys = Update._keys(upd);\n\n    Session.findByIdAndUpdate(session._id, upd, {\n      new: true,\n      fields: SESSION_FIELDS,\n      upsert: true,\n    })\n      .lean()\n      .exec(function (err, doc) {\n        if (err) {\n          log.error('Update.session error [', this, ']', err);\n        } else if (!doc) {\n          log.error('Update.session no session found!', session);\n        } else if (doc && opts.log_all) {\n          log.session(doc, 'Update.session success [', this, ']');\n        }\n\n        if (cb) {\n          cb(err, doc);\n        }\n      }.bind(keys));\n  },\n\n  request(socket, updIn, cb) {\n    const upd = {};\n\n    for (const k in updIn) {\n      // $push: { clicks: id }\n      // -->\n      // $push: { reqs.$.clicks: id }\n\n      if (!upd[k]) {\n        upd[k] = {};\n      }\n\n      for (const k2 in updIn[k]) {\n        const reqKey = `reqs.$.${k2}`;\n        upd[k][reqKey] = updIn[k][k2];\n      }\n    }\n\n    const keys = Update._keys(upd);\n\n    Session.update(\n      {\n        _id: socket.session._id,\n        'reqs._id': socket.req._id,\n      },\n      upd,\n      function (err, { n }) {\n        const socket = this.socket;\n\n        if (err) {\n          log.error(\n            'Update.request error [',\n            this.keys,\n            ']',\n            socket.session._id,\n            socket.req._id,\n            err,\n          );\n        } else if (n < 1) {\n          log.error('Update.request not found!', socket.session._id, socket.req._id);\n        } else if (opts.log_all) {\n          log.session(socket.session, 'Update.request success [', this.keys, ']');\n        }\n\n        if (cb) {\n          return cb(err);\n        }\n      }.bind({\n        socket,\n        keys,\n      }),\n    );\n  },\n\n  _keys(params) {\n    const keys = [];\n\n    for (const k in params) {\n      for (const k2 in params[k]) {\n        keys.push(k2);\n      }\n    }\n\n    return keys;\n  },\n};\n\n// =====================\n\nfunction getCookies(src) {\n  const cookies = cookie.parse(src || '');\n  for (const k in cookies) {\n    if (k.indexOf('na_') === 0) {\n      try {\n        cookies[k] = AES.decrypt(cookies[k]);\n      } catch (err) {\n        log.error('getCookies error', err);\n        delete cookies[k];\n      }\n    }\n  }\n\n  return cookies;\n}\n\nconst AES = {\n  encrypt(value) {\n    return CryptoJS.AES.encrypt(value, opts.secret).toString();\n  },\n  decrypt(encrypted) {\n    return CryptoJS.AES.decrypt(encrypted, opts.secret).toString(CryptoJS.enc.Utf8);\n  },\n};\n\n// =====================\n\nfunction sessions(options, cb) {\n  if (!cb) {\n    cb = options;\n    options = { is_bot: false };\n  }\n\n  const n = 32;\n\n  Session.find(options)\n    .sort({ date: 'desc' })\n    .limit(n)\n    .exec((err, results) => {\n      if (err) {\n        log.error('Sessions query error:', err);\n      }\n\n      cb(err, results);\n    });\n}\n"]}